<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:wfw="http://wellformedweb.org/CommentAPI/"
     >
  <channel>
    <title>zzpwelkin</title>
    <link>http://localhost:8080/blog</link>
    <description>Working in headwind</description>
    <pubDate>Tue, 21 Aug 2012 15:38:36 GMT</pubDate>
    <generator>Blogofile</generator>
    <sy:updatePeriod>hourly</sy:updatePeriod>
    <sy:updateFrequency>1</sy:updateFrequency>
    <item>
      <title>影像镶嵌自动化实现白皮书</title>
      <link>http://localhost:8080/myglogo/blog/2012/08/21/影像镶嵌自动化实现白皮书</link>
      <pubDate>Tue, 21 Aug 2012 23:38:36 CST</pubDate>
      <category><![CDATA[影像镶嵌]]></category>
      <guid isPermaLink="true">http://localhost:8080/myglogo/blog/2012/08/21/影像镶嵌自动化实现白皮书</guid>
      <description>影像镶嵌自动化实现白皮书</description>
      <content:encoded><![CDATA[<h3>影像镶嵌的主要难点</h3>
<ol>
<li>影像之间空间几何信息差异问题，使得镶嵌后的影像上拼接处地物有不重合现象；</li>
<li>影像之间亮度和色度差异问题</li>
<li>单幅影像内亮度和色</li>
</ol>
<h3>实现步骤</h3>
<ol>
<li>
<p>投影影像到同一坐标系下和并重采样影像为同一分辨率，对每一幅影像进行匀光匀色操作(如果需要，非必须的)；</p>
</li>
<li>
<p>计算影像重叠信息并生成重叠信息表和重叠影像重叠区域裁减后的影像；</p>
</li>
<li>
<blockquote>
<p>S(a). 几何差异处理：用MS等方法，处理裁减后的重叠影像对并生成对象层( <em>@a</em> )<br />
</p>
<blockquote>
<p>A(a) 拼接线生成：产生一条穿过对象个数最少的拼接线。此拼接线由穿过所有连续对象的中心线连接而成( <em>@b</em> )<br />
A(b) 几何纠正：依据对象的周长、面积及主方向匹配重叠对象层上的对象，在对象上选取明显角点作为匹配的同名点，
     由匹配的同名点和精度较高的参考影像生成其他影像几何纠正参数表( <em>@c</em> )<br />
S(b). 辐射差异处理：根据匀光匀色算法( <em>@d</em> )，统计重叠影像辐射差异纠正模型并产生辐射纠正参数表</p>
</blockquote>
</blockquote>
</li>
<li>
<p>依据上面生成的模型分别对影像进行纠正并生成修正后的影像；</p>
</li>
<li>
<p>拼接修正后的影像</p>
</li>
</ol>
<h3>具体实现方法</h3>
<p>@a. 可以用较成熟的Mean-shift 或 mumford-shah方法产生对象层<br />
@b. 待详细研究<br />
@c. 几何纠正用一般的多项式拟合工具即可<br />
@d. 目前已有的镶嵌软件都有匀光匀色功能，但我使用的几个软件感觉效果不太理想(也可能是自己参数每设置对吧)。最近使用了一个Montage软件，其对天文影像辐射纠正效&gt;    果很好，不知道其辐射纠正原理是否适合遥感影像</p>
<h3>其他内容参考</h3>
<ol>
<li>Mean-Shift算法</li>
<li>Mumford-Shah算法</li>
<li>Montage软件</li>
<li>hugin软件</li>
</ol>]]></content:encoded>
    </item>
    <item>
      <title>网络GIS服务构建计划书</title>
      <link>http://localhost:8080/myglogo/blog/2012/08/21/网络gis服务构建计划书</link>
      <pubDate>Tue, 21 Aug 2012 23:38:36 CST</pubDate>
      <category><![CDATA[WPS网络服务]]></category>
      <guid isPermaLink="true">http://localhost:8080/myglogo/blog/2012/08/21/网络gis服务构建计划书</guid>
      <description>网络GIS服务构建计划书</description>
      <content:encoded><![CDATA[<h3>每天工作时间安排</h3>
<ul>
<li>早：9:00 ~ 12:00</li>
<li>下：休息</li>
<li>晚：19:00 ~ 22:00</li>
</ul>
<h3>要求</h3>
<ol>
<li>如果一个任务若超过5天，则做完后用业余时间一定要写总结</li>
</ol>
<h3>任务细化及时间安排</h3>
<h4>第一阶段 免费数据准备(2星期)</h4>
<ol>
<li>
<p>参考资料准备(半天)</p>
</li>
<li>
<p>共享数据共享服务方式熟悉及数据提供网站搜集<br />
    2.1 收集SDI相关内容，了解其提供数据的方式及访问接口(5天)<br />
    2.2 WMS、WFS数据提供网站及服务标准和接口(1天) <br />
    2.3 google map访问接口熟悉(1天)<br />
</p>
</li>
<li>
<p>基于QGis Browser实现共享数据管理及测试<br />
    3.1 搭建起QGis Browser开发平台(2天)<br />
    3.2 学习QGis Browser中WMS、Google Map服务接口访问实现方法(2天)<br />
    3.3 在QGis Browser中实现SDI共享数据服务访问(3天)<br />
</p>
</li>
</ol>
<p>总结：</p>
<ul>
<li>将所有第一阶段所学到的内容和实现等归纳总结成文档并撰写Blog或Wiki;</li>
<li>所有查询的资料分门别类的上传到Mendeley文献管理平台上<br />
</li>
</ul>
<h4>第二阶段 基于一个单一功能的Wps服务实现(3星期)</h4>
<ol>
<li>
<p>一些基础平台(如Grass，qgis等)的展示及应用学习与培训(1天)<br />
</p>
</li>
<li>
<p>服务端实现<br />
    2.1 了解并学习WPS标准(1天)<br />
    <small>张：搭建起pywps和grass平台开发环境(业余时间)</small><br />
    2.2 先基于pywps的教程及wps标准学习如何使用wps提供服务以及pywps其他扩展内容内容的了解(1天)<br />
    2.3 深入研究pywps的实现及相关内容(默认3天，可根据第2步了解的情况具体规划时间)<br />
    2.4 pywps分别基于SDI/WMS/Google Map接口实现一个单一功能的网络处理服务(1天)<br />
</p>
</li>
<li>
<p>wps服务客户端实现(两星期)<br />
    <small>注：客户端主要分为浏览器和客户端(Qgis)访问两种途径访问wps服务，为了方便实现首先基于浏览器访问途径的实现(不用了解QGis的实现方法及接口)。</small><br />
    【需要将目标清晰化，这一部分没接触过】<br />
</p>
</li>
</ol>
<p>总结：(1天)</p>
<h4>第三阶段 具体应用案例的多个Demo的实现 (因为是曾经做过的案例，希望每个不要超过3星期)</h4>
<p><small> 注：实现曾经做过的案例 </small><br />
要求：每个案例Demo的实现都要有详细的 需求分析文档、概要设计文档、业务具体实现设计文档<br />
总结：</p>
<ul>
<li>案例实现过程中的经验和最佳实践;<br />
</li>
<li>服务器和客户端需要改进的地方等</li>
</ul>
<h4>第四阶段 平台部署(1星期)</h4>
<p>Pre: 比较服务平台部署到Amazon云服务设施上和用Eucalyptus搭建自己的云设施哪种更经济(2天)<br />
1. 将平台的服务端搭建到云设施上(半天)<br />
2. 建设自己的向外公布性的服务网站，至少要提供实现的几个Demo (3天)<br />
</p>
<p><strong>调整阶段(在以上前进过程中，有些部分可能与期望的不同，这时可对平台一部分内容做相应的调整)</strong></p>
<p><strong>系统测试阶段(从可靠性和效率方面测试服务质量，并编写自动测试脚本或工具，以方便以后业务的扩增)</strong></p>
<h4>第五阶段 正式使用和扩展阶段</h4>
<ul>
<li>正式使用：寻找需要GIS解决方案的客户，与他们洽谈并做订单；</li>
<li>富客户端访问wps服务实现</li>
<li>(长期计划) 在服务端增加新的处理功能，如面向对象信息提取，影像镶嵌、空三等具有研究意义的功能集</li>
</ul>
<h4>第六阶段：扩大规模并前进...</h4>]]></content:encoded>
    </item>
    <item>
      <title>区域增长分隔</title>
      <link>http://localhost:8080/myglogo/blog/2012/08/21/区域增长分隔</link>
      <pubDate>Tue, 21 Aug 2012 23:38:36 CST</pubDate>
      <category><![CDATA[面向对象信息提取]]></category>
      <guid isPermaLink="true">http://localhost:8080/myglogo/blog/2012/08/21/区域增长分隔</guid>
      <description>区域增长分隔</description>
      <content:encoded><![CDATA[<h3>分割概述</h3>
<p>面向对象中的分隔分为以pixels或cells(如规则2D和3D的格网)和以对象为单位的分类</p>
<p>*1. 以pixels或cells为单位的分类
    * 输入: a. 规则格网数据(如影像、DEM数据等)
          b. 对象或处理范围约束文件(如线或面要素矢量文件)</p>
<pre><code>* 输出: 分类后的面要素矢量文件。空间属性:每个对象的空间范围；非空间属性：每个对象的ID号，色度相关的值(如均值、方差、最大值、最小值、紧致度等),几何形状相关值(如面积、周长、长宽比等)，继承属性(如所属的上层对象，包含的下层对象.是否需要？从集合信息中可以计算得到)

* 实现算法：Meanshift(OTB和grass均已实现)、Mumford-S(grass的Addons中已实现)、区域增长算法
</code></pre>
<p>*2. 以对象为单位的分类
      * 输入: 1 步得到的结果(LabelMap对象或Vector对象)、原始影像</p>
<pre><code>  * 输出: 同1 (LabelImage对象或Vector对象)

  * 实现算法：区域增长算法(FNA分形网络演变分隔算法)
</code></pre>
<h3>实现计划：</h3>
<pre><code>在OTB的OBIA模块上添加分隔算法
* 8/13～8/15： 查看OBIA模块已经实现了那些东西及定义分割类接口;
    OBIA模块应用了ITK的Label对象框架(OTB都有那些框架?)。
    上面两种分割方法的概要数据流为: 1) Grids数据-----&gt;矢量文件; 2) 矢量文件------&gt;矢量文件。

* 8/16 ~ 8/17: FNAfilter实现(8/16上午学习OTB中filter具体编写方法，8/16下午实现FNAFilter并通过编译; 8/17编写FNAfilter的Example并测试)
</code></pre>]]></content:encoded>
    </item>
  </channel>
</rss>
